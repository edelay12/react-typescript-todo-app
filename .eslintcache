[{"/Users/evanmiller/Documents/Projects/Typescript/todo-ts/src/App.tsx":"1","/Users/evanmiller/Documents/Projects/Typescript/todo-ts/src/components/addTodo.tsx":"2","/Users/evanmiller/Documents/Projects/Typescript/todo-ts/src/components/displayTodos.tsx":"3","/Users/evanmiller/Documents/Projects/Typescript/todo-ts/src/index.tsx":"4","/Users/evanmiller/Documents/Projects/Typescript/todo-ts/src/components/todoItem.tsx":"5","/Users/evanmiller/Documents/Projects/Typescript/todo-ts/src/reportWebVitals.ts":"6"},{"size":1820,"mtime":1609615434838,"results":"7","hashOfConfig":"8"},{"size":661,"mtime":1609212795138,"results":"9","hashOfConfig":"8"},{"size":928,"mtime":1609615436880,"results":"10","hashOfConfig":"8"},{"size":547,"mtime":1609615513044,"results":"11","hashOfConfig":"8"},{"size":643,"mtime":1608610822660,"results":"12","hashOfConfig":"8"},{"size":425,"mtime":1608219507905,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"z85sw6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/evanmiller/Documents/Projects/Typescript/todo-ts/src/App.tsx",["27","28"],"import React, { useReducer } from \"react\";\nimport \"./App.css\";\nimport { AddTodo } from \"./components/addTodo\";\nimport { DisplayTodos } from \"./components/displayTodos\";\n\ntype Actions =\n  | { type: \"add\"; text: string }\n  | {\n      type: \"remove\";\n      idx: number;\n    }\n  | {\n      type: \"markComplete\";\n      idx: number;\n    };\n\ninterface Todo {\n  text: string;\n  completed: boolean;\n}\n\nconst TodoReducer = (state: State, action: Actions) => {\n  switch (action.type) {\n    case \"add\":\n      return [...state, { text: action.text, completed: false }];\n    case \"remove\":\n      return state.filter((_, i) => action.idx !== i);\n    case \"markComplete\":\n      let todos = state;\n      todos.map((t, i) => {\n        if (action.idx == i) t.completed = !t.completed;\n      });\n      return [...todos];\n    default:\n      return state;\n  }\n};\n\ntype State = Todo[];\n\nconst App: React.FC = () => {\n  const [todos, dispatch] = useReducer(TodoReducer, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1> Todos </h1>\n      </header>\n      <div>\n        {JSON.stringify(todos)}\n        <AddTodo\n          handleSubmitTodo={(e, input) => {\n            e.preventDefault();\n            dispatch({ type: \"add\", text: input });\n          }}\n        />\n        <button\n          onClick={() => {\n            dispatch({ type: \"add\", text: \"...\" });\n          }}\n        >\n          +\n        </button>\n      </div>\n\n      <DisplayTodos\n        todos={todos}\n        markComplete={i => dispatch({ type: \"markComplete\", idx: i })}\n        deleteTodo={i => dispatch({ type: \"remove\", idx: i })}\n      />\n    </div>\n  );\n};\n// deleteTodo={(i) => dispatch({type: \"remove\", idx: i})}  markComplete={(i) => dispatch({type: \"markComplete\", idx: i})}\n//onClick={() => markComplete(i)\nexport default App;\n","/Users/evanmiller/Documents/Projects/Typescript/todo-ts/src/components/addTodo.tsx",["29"],"/Users/evanmiller/Documents/Projects/Typescript/todo-ts/src/components/displayTodos.tsx",[],"/Users/evanmiller/Documents/Projects/Typescript/todo-ts/src/index.tsx",[],"/Users/evanmiller/Documents/Projects/Typescript/todo-ts/src/components/todoItem.tsx",[],"/Users/evanmiller/Documents/Projects/Typescript/todo-ts/src/reportWebVitals.ts",[],{"ruleId":"30","severity":1,"message":"31","line":30,"column":24,"nodeType":"32","messageId":"33","endLine":30,"endColumn":26},{"ruleId":"34","severity":1,"message":"35","line":31,"column":24,"nodeType":"36","messageId":"37","endLine":31,"endColumn":26},{"ruleId":"38","severity":1,"message":"39","line":3,"column":11,"nodeType":"40","messageId":"41","endLine":3,"endColumn":15},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'Todo' is defined but never used.","Identifier","unusedVar"]